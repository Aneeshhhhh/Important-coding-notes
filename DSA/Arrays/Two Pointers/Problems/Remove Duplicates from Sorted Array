class Solution {
    public int removeDuplicates(int[] nums) {
        
        Arrays.sort(nums);
      //Sorting is necesssary because this method relies on the fact that the duplicates are always adjacent. Ex 1  2 2 4 4 5. 
      //If the array is unsorted, the duplicates can be scattered and misunderstood to be unique as we are comparing only two indexes


        int unique = 0;
        for (int i = 1; i < nums.length; i++) {
            if (nums[i] != nums[unique]) { 
              
                unique++; 
                nums[unique] = nums[i]; 
            }
        }
        return unique+1;

    }
}
/if two indexes do not match, the unique's count is increased and the value reached by the updated unique, is overwritten with the current iteration of i.
//For an example, if this is the array, it works like this

//Arr =  4 5 5 6 6 8
//i is 1 = 5
//unique = 0;
//4!=5, therefore unique+1
//nums[unique=1]=nums[1]
//i = 2, now 5==5, now nothing happens
//i=3 5!=6, now unique = 2
//nums[unique=2]=nums[3]
// 4 5 6 and goes on
